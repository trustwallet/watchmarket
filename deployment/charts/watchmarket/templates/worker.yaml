apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker
  namespace: {{ .Release.Namespace }}
  labels:
    app: worker
    chart: {{ template "watchmarket.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      {{- include "watchmarket.selectorLabels" . | nindent 6 }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "watchmarket.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - env:
        - name: ELASTIC_APM_SERVICE_NAME
          value: watchmarket-worker-helm
        envFrom:
        - secretRef:
            name: secrets
            optional: false
        - configMapRef:
            name: config
            optional: false
        - secretRef:
            name: elastic
            optional: false
        image: "{{ .Values.image.repository }}:{{ .Values.image.workerTag }}"
        imagePullPolicy: IfNotPresent
        name: worker
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities: {}
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
      dnsPolicy: ClusterFirst
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
      - envFrom:
        - secretRef:
            name: secrets
        image: "{{ .Values.image.repository }}:{{ .Values.image.pgCheckTag }}"
        imagePullPolicy: IfNotPresent
        name: postgres-check
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities: {}
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
