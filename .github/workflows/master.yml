name: Master CI

on:
  push:
    branches: [ master ]

jobs:
  test:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.13
        id: go

      - name: Check out code
        uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          go get -v -t -d ./...

      - name: Lint
        run: make lint

      - name: Swagger
        run: make swag

      - name: Build
        run: make go-build

      - name: Unit Test
        run: make test

      - name: Upload coverage
        run: bash <(curl -s https://codecov.io/bash) -f coverage.txt

      - name: Integration Test
        run: make integration

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
       - name: Check user permission
         id: check
         uses: scherermichael-oss/action-has-permission@master
         with:
           required-permission: write
         env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                
       - name: Set up Go 1.x
         if: steps.check.outputs.has-permission
         uses: actions/setup-go@v2
         with:
           go-version: ^1.13
         id: go

       - name: Check out code into the Go module directory
         if: steps.check.outputs.has-permission
         uses: actions/checkout@v2
         with:
          ref: ${{ github.head_ref }}

       - name: Get short commit hash
         if: steps.check.outputs.has-permission
         id: hash
         run: echo "::set-output name=sha7::$(echo $(git rev-parse --short HEAD) | cut -c1-7)"

       - name: Show short hash
         if: steps.check.outputs.has-permission
         run: |
           echo ${{ steps.hash.outputs.sha7 }}

       - name: Get dependencies
         if: steps.check.outputs.has-permission
         run: |
           go get -v -t -d ./...

       - name: Swagger
         if: steps.check.outputs.has-permission
         run: make swag

       - name: Build
         if: steps.check.outputs.has-permission
         run: make go-build

       - name: Login to DockerHub Registry
         if: steps.check.outputs.has-permission
         run: echo ${{ secrets.REGISTRY_PASSWORD }} | docker login -u ${{ secrets.REGISTRY_USERNAME }} --password-stdin

       - name: Docker Build & Push Release Images
         if: steps.check.outputs.has-permission
         env:
           API_IMAGE: ${{ secrets.REGISTRY }}:api-${{ steps.hash.outputs.sha7 }}
           WORKER_IMAGE: ${{ secrets.REGISTRY }}:worker-${{ steps.hash.outputs.sha7 }}
         run: |
           docker build --build-arg SERVICE=api/api -f Dockerfile.runner -t $API_IMAGE .
           docker build --build-arg SERVICE=worker/worker -f Dockerfile.runner -t $WORKER_IMAGE .
           docker push $API_IMAGE
           docker push $WORKER_IMAGE

  deploy:
    name: CD
    runs-on: ubuntu-latest
    needs: [test, build]
    steps:
       - name: Check user permission
         id: check_for_deploy
         uses: scherermichael-oss/action-has-permission@master
         with:
           required-permission: write
         env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       
       - name: CD Trigger
         if: github.ref == 'refs/heads/master' && steps.check_for_deploy.outputs.has-permission
         uses: Azure/pipelines@releases/v1
         with:
           azure-devops-project-url: 'https://dev.azure.com/TrustWallet/WatchMarket'
           azure-pipeline-name: 'AutomaticCD'
           azure-devops-token: '${{ secrets.AZURE_DEVOPS_TOKEN }}'